// Generated by CoffeeScript 1.8.0
var Slack, apiToken, domain, should, webhookToken, webhookUri;

should = require("should");

Slack = require("../index");

domain = "slack-node";

webhookToken = "ROHgstANbsFAUA5dHHI5JONu";

apiToken = "xoxp-2307918714-2307918716-2307910813-17cabf";

webhookUri = "https://hooks.slack.com/services/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";

describe.only('slack new webhook test', function() {
  var slack;
  slack = new Slack();
  slack.setWebHook(webhookUri);
  it(',should send a correct response', function(done) {
    slack.should.be.an.Object;
    return done();
  });
  it(',should send a correct response', function(done) {
    return slack.webhook({
      channel: "#general",
      username: "webhookbot",
      text: "This is posted to #general and comes from a bot named webhookbot."
    }, function(err, response) {
      response.should.be.ok.and.an.Object;
      return done();
    });
  });
  it(',should send a correct response', function(done) {
    return slack.webhook({
      channel: "#general",
      username: "webhookbot",
      text: "This is posted to #general and comes from a bot named webhookbot.",
      "icon_emoji": ":ghost:"
    }, function(err, response) {
      response.should.be.ok.and.an.Object;
      return done();
    });
  });
  return it(',should have status code and headers', function(done) {
    return slack.webhook({
      channel: "#general",
      username: "webhookbot",
      text: "This is posted to #general and comes from a bot named webhookbot.",
      "icon_emoji": ":ghost:"
    }, function(err, response) {
      response.statusCode.should.be.a.Number;
      response.headers.should.be.an.Object;
      return done();
    });
  });
});

describe("slack api part", function() {
  var slack;
  slack = new Slack(apiToken);
  it(',shoule be return a slack object', function(done) {
    slack.should.be.an.Object;
    return done();
  });
  return it(", run with user.list", function(done) {
    return slack.api("users.list", function(err, response) {
      response.should.be.ok.and.an.Object;
      return done();
    });
  });
});

describe(", emoji test", function() {
  var slack;
  slack = new Slack(webhookToken, domain);
  it(', emoji give empty value', function(done) {
    var obj;
    obj = slack.detectEmoji();
    obj.should.be.an.Array;
    obj["key"].should.equal("icon_emoji");
    obj["val"].should.equal("");
    return done();
  });
  it(', emoji using :ghost: style', function(done) {
    var obj;
    obj = slack.detectEmoji(":ghost:");
    obj.should.be.an.Array;
    obj["key"].should.equal("icon_emoji");
    obj["val"].should.equal(":ghost:");
    return done();
  });
  return it(', emoji using http image url', function(done) {
    var obj;
    obj = slack.detectEmoji("http://icons.iconarchive.com/icons/rokey/popo-emotions/128/after-boom-icon.png");
    obj.should.be.an.Array;
    obj["key"].should.equal("icon_url");
    obj["val"].should.equal("http://icons.iconarchive.com/icons/rokey/popo-emotions/128/after-boom-icon.png");
    return done();
  });
});

describe("lack something", function() {
  var slack;
  slack = new Slack(webhookToken, domain);
  return it(', without callback', function(done) {
    var feedback, method;
    method = "files.list";
    feedback = slack.api(method);
    feedback.should.be.an.Object;
    feedback.should.equal(slack);
    feedback.should.not.be["null"];
    return done();
  });
});
